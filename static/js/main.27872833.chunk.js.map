{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStarted","sortMethod","setSortMethod","isReverse","setReverseMethod","minLength","setMinLength","goods","arr","copy","sort","a","b","localeCompare","length","reverse","filter","good","neededGoods","className","type","onClick","ALPABET","LENGTH","current","NONE","map","name","id","value","onChange","event","n","currentTarget","Array","fill","num","i","count","ReactDOM","render","document","getElementById"],"mappings":"6KAgBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAUA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAkBC,EAAlB,KAUA,EAAkCN,mBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KA4BA,IAAMC,EAvBN,SAAqBC,GACnB,IAAMC,EAAI,YAAOD,GAmBjB,OAjBAC,EAAKC,MAAK,SAACC,EAAGC,GACZ,OAAQX,GACN,KAAK,EACH,OAAOU,EAAEE,cAAcD,GAEzB,KAAK,EACH,OAAOD,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAITX,GACFM,EAAKM,UAGAN,EAAKO,QAAO,SAAAC,GAAI,OAAIA,EAAKH,QAAUT,KAG9Ba,CAAYtB,GAE1B,OACE,sBAAKuB,UAAU,MAAf,WACIpB,GACA,wBACEqB,KAAK,SACLD,UAAU,4CACVE,QA5DU,WAChBrB,GAAW,IAwDP,mBASDD,GACC,qCACE,wBACEqB,KAAK,SACLD,UAAS,4BAAuBlB,IAAeN,EAAS2B,QAAU,aAAe,IACjFD,QAjEW,WACnBnB,EAAcP,EAAS2B,UA6DjB,iCAQA,wBACEF,KAAK,SACLD,UAAS,4BAAuBlB,IAAeN,EAAS4B,OAAS,aAAe,IAChFF,QArES,WACjBnB,EAAcP,EAAS4B,SAiEjB,4BAQA,wBACEH,KAAK,SACLD,UAAS,4BAAuBhB,EAAY,aAAe,IAC3DkB,QAxEU,WAClBjB,GAAiB,SAAAoB,GAAO,OAAKA,MAoEvB,qBAQA,wBACEJ,KAAK,SACLD,UAAU,8BACVE,QA5EU,WAClBnB,EAAcP,EAAS8B,MACvBrB,GAAiB,IAuEX,mBAQA,oBAAIe,UAAU,QAAd,SACGZ,EAAMmB,KAAI,SAAAT,GAAI,OACb,oBAAIE,UAAU,cAAd,SACGF,GAD8BA,QAMrC,qBAAKE,UAAU,SAAf,oDAGA,qBACEA,UAAU,SADZ,SAGE,wBACEQ,KAAK,YACLC,GAAG,YACHC,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OA7FCC,GA6FyBD,EAAME,cAAcJ,WA5FlEvB,EAAa0B,GADO,IAACA,GAyFb,SAMGE,MAAM,IAAIC,KAAK,GAAGT,KAAI,SAACU,EAAKC,GAC3B,IAAMC,EAAQF,EAAMC,EAEpB,OACE,wBACER,MAAOS,EADT,SAIGA,GAFIA,iBCnJzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.27872833.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStarted] = useState(false);\n  const showGoods = () => {\n    setStarted(true);\n  };\n\n  const [sortMethod, setSortMethod] = useState(0);\n\n  const alphabetSort = () => {\n    setSortMethod(SortType.ALPABET);\n  };\n\n  const lengthSort = () => {\n    setSortMethod(SortType.LENGTH);\n  };\n\n  const [isReverse, setReverseMethod] = useState(false);\n  const reverseSort = () => {\n    setReverseMethod(current => !current);\n  };\n\n  const defaultSort = () => {\n    setSortMethod(SortType.NONE);\n    setReverseMethod(false);\n  };\n\n  const [minLength, setMinLength] = useState(1);\n  const minLengthSort = (n:number) => {\n    setMinLength(n);\n  };\n\n  function neededGoods(arr: string[]) {\n    const copy = [...arr];\n\n    copy.sort((a, b) => {\n      switch (sortMethod) {\n        case 1:\n          return a.localeCompare(b);\n\n        case 2:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReverse) {\n      copy.reverse();\n    }\n\n    return copy.filter(good => good.length >= minLength);\n  }\n\n  const goods = neededGoods(goodsFromServer);\n\n  return (\n    <div className=\"App\">\n      {!isStarted && (\n        <button\n          type=\"button\"\n          className=\"button is-success is-rounded is-fullwidth\"\n          onClick={showGoods}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <>\n          <button\n            type=\"button\"\n            className={`button is-rounded ${sortMethod === SortType.ALPABET ? 'is-success' : ''}`}\n            onClick={alphabetSort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-rounded ${sortMethod === SortType.LENGTH ? 'is-success' : ''}`}\n            onClick={lengthSort}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-rounded ${isReverse ? 'is-success' : ''}`}\n            onClick={reverseSort}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-rounded is-danger\"\n            onClick={defaultSort}\n          >\n            Reset\n          </button>\n\n          <ul className=\"Goods\">\n            {goods.map(good => (\n              <li className=\"Goods__item\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"length\">\n            Select minimal length of word to sort:\n          </div>\n          <div\n            className=\"select\"\n          >\n            <select\n              name=\"maxLength\"\n              id=\"maxLength\"\n              value={minLength}\n              onChange={(event) => minLengthSort(+event.currentTarget.value)}\n            >\n              {Array(10).fill(1).map((num, i) => {\n                const count = num + i;\n\n                return (\n                  <option\n                    value={count}\n                    key={count}\n                  >\n                    {count}\n                  </option>\n                );\n              })}\n\n            </select>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}